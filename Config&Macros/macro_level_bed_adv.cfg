; This is where the magic happens:
; MAX_AGE is checked against the stored variable
; SAVE=1 can be used to force saving the mesh (restarts klipper, so
;        only for manual usage)
; FORCE_LEVEL=1 forces a mesh probe even if MAX_AGE is not reached
[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
 
  {% if (printer["gcode_macro VARIABLES"].level_age == 0) or (printer["gcode_macro VARIABLES"].level_age >= max_age|int) or (force_level == 1)%} 
    SET_GCODE_VARIABLE MACRO=VARIABLES VARIABLE=level_age VALUE=1
    {% set force_level = 1 %}
  {% else %} ; load level_age and increment
    SET_GCODE_VARIABLE MACRO=VARIABLES VARIABLE=level_age VALUE={ printer["gcode_macro VARIABLES"].level_age + 1 }
  {% endif %} 
  {action_respond_info("Bed mesh age is " + printer["gcode_macro VARIABLES"].level_age|string) + "."} 
  {action_respond_info("Force Bed mesh is " + force_level|string) + "."} 

  ; Level eventually
  {% if force_level %}
    {action_respond_info("Bed mesh leveling...")} 

    M106 S255  #Start fan  
    BED_MESH_CALIBRATE
    M106 S0  #Stop fan
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    RESPOND MSG="Bed level: loading default profile."
    BED_MESH_PROFILE LOAD=default
  {% endif %} 
