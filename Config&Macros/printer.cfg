#####################################################################
#   Plugins/Scripts instalados (referências)
#####################################################################
#
# Self Calibrating Z Offset
# https://github.com/protoloft/klipper_z_calibration
#
# Input Shaper Workflow
# https://github.com/Frix-x/klipper-voron-V2/blob/main/doc/features/is_workflow.md
#
# Automated Probe Accuracy test
# https://github.com/sporkus/probe_accuracy_tests
#
# Probe accuracy testing
# https://github.com/KiloQubit/probe_accuracy
#
#####################################################################
#   Printer Configuration
#####################################################################

[include config_mcu.cfg]

[include config_adxl.cfg]

[include config_kinematics.cfg]

[include config_steppers.cfg]

[include config_extruder.cfg]

[include config_bed.cfg]

[include config_fans.cfg]

[include config_leds.cfg]

[include config_probe.cfg]

[include config_enclosure.cfg]

[include config_display.cfg]

[include config_filament_sensor.cfg]

#####################################################################
#   Other Printer Configuration
#####################################################################

[force_move]
enable_force_move: True

[exclude_object]
# Needed for adaptative bed mesh

[respond]
# Needed for MacroSteps Plugin

#####################################################################
#  File location of stored variables
#####################################################################

[save_variables]
filename: ~/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg

#####################################################################
#  Moonraker Requirements
#####################################################################

[virtual_sdcard]
path: ~/printer_data/gcodes

#####################################################################
#   Macros
#####################################################################

[include macro_g32.cfg]
 
[include macro_purge_fil.cfg]

[include macro_print_start.cfg]

[include macro_M572.cfg]

[include macro_print_end.cfg]

[include macro_wipe_nozzle.cfg]

[include macro_filament_change.cfg]

[include macro_beeper.cfg]

#[include macro_avoid_klicky.cfg]

[include macro_set_status.cfg]

[include macro_wled.cfg]

[include macro_sbleds.cfg]

[include macro_prime_nozle.cfg]

#####################################################################
#   Macros especiais de terceiros
#####################################################################

# Adaptative Bed Mesh
# https://github.com/Frix-x/klipper-voron-V2/blob/main/macros/calibration/adaptive_bed_mesh.cfg
[include macro_adaptive_bed_mesh.cfg]

# Automatizao dos testes de vibracao
# https://github.com/Frix-x/klipper-voron-V2/blob/main/macros/calibration/vibr_calibrate_01.cfg
[include macro_vibr_calibrate_01.cfg]
[include printer_data/config/scripts/shell_commands.cfg] 

# Klicky
# https://github.com/jlas1/Klicky-Probe
#[include klipper/config/klicky-probe.cfg]

# Purge bucket
# https://github.com/Hartk-PrinterConfigs/DoomConfig/blob/master/purge.cfg
[include macro_nozzle_scrub.cfg]

# Test Probe accuracy
# https://github.com/KiloQubit/probe_accuracy
[include macro_test_probe_accuracy.cfg]

# Cancellable Heat soak
# https://github.com/garethky/klipper-voron2.4-config/blob/mainline/klipper_config/heatsoak.readme.md
[include macro_heatsoak.cfg]

# Advanced Bed Mesh (Nao usada mais)
#[include macro_level_bed_adv.cfg]


# Speed test
# https://ellis3dp.com/Print-Tuning-Guide/articles/determining_max_speeds_accels.html
[include macro_speed_test.cfg]

#Vibration test
# https://github.com/Frix-x/klippain/blob/main/docs/features/vibr_measurements.md
[include macro_IS_vibrations_measurement.cfg]

#####################################################################
#   Macros Simples
#####################################################################
    
[gcode_macro PREPARA]
gcode:
    {% set bkp_speed_accel = printer.toolhead.max_accel|int %}
    {% set bkp_speed_deaccel = printer.toolhead.max_accel_to_decel|int %}
    {% set bkp_speed_min = printer.toolhead.square_corner_velocity|float %}
    {% set bkp_speed_max = printer.toolhead.max_velocity|float %}
    SET_VELOCITY_LIMIT VELOCITY=450 ACCEL=500 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=4
    {% if "xyz" not in printer.toolhead.homed_axes %}
      SET_STATUS STATUS="home"
      G28
    {% endif %}
    SET_STATUS STATUS="wipe"
    NOZZLE_WIPE
    M106 S255  		; Start fan
    {% if not printer.quad_gantry_level.applied %}
      SET_STATUS STATUS="qgl"
      QUAD_GANTRY_LEVEL
      SET_STATUS STATUS="home"
      G28 Z
    {% endif %}
    M106 S0  		    ; Stop fan
    SET_VELOCITY_LIMIT VELOCITY={bkp_speed_max} ACCEL={bkp_speed_accel} ACCEL_TO_DECEL={bkp_speed_deaccel} SQUARE_CORNER_VELOCITY={bkp_speed_min}

[gcode_macro AXIS_TEST]
description: Run small test just in a Y axis
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min = params.MIN|default(5)|int %}
    {% set max = params.MAX|default(80)|int %}
    {% set axis = params.AXIS|default("y")|string %}

    BED_MESH_CLEAR
    TEST_RESONANCES AXIS={axis} FREQ_START={min} FREQ_END={max} HZ_PER_SEC=0.2
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER

[gcode_macro SPOT_TEST]
description: Run small test around a certain frequency
gcode:
    {% set FREQ = params.FREQ|default(25)|int %}
    {% set DUR = params.DUR|default(10)|int %}
    {% set AXIS = params.AXIS|default("y")|string %}

    BED_MESH_CLEAR
    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQ-1} FREQ_END={FREQ+1} HZ_PER_SEC={1/(DUR/3)}
    M400

[gcode_macro VARIABLES]
variable_level_age: 0
gcode:
    M118 Stored variable as {printer["gcode_macro VARIABLES"].false}
     
[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
    
[gcode_macro _SET_FAN_SPEED]
gcode:
    M106 S{ (params.PERCENT | float) * 255 / 100 }

[gcode_macro CENTER]
gcode:
    {% if ("xyz" not in printer.toolhead.homed_axes) %}
      G28
    {% endif %}
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F7200

[gcode_macro BELT_CENTER]
gcode:
    G1 X148.5 Y108 Z10 F4000

[gcode_macro FRONT]
gcode:
    {% if ("xyz" not in printer.toolhead.homed_axes) %}
      G28
    {% endif %}
    G90
    G0 X205 Y0 Z150 F7200 #{ printer.toolhead.axis_maximum.x*2/3 } - fixei a posição para pegar o ponto do ref_index do mesh

[gcode_macro back]
gcode:
    {% if ("xyz" not in printer.toolhead.homed_axes) %}
      G28
    {% endif %}
    G90
    G0 X205 Y297 Z80 F7200 #{ printer.toolhead.axis_maximum.x*2/3 } - fixei a posição para pegar o ponto do ref_index do mesh

[gcode_macro HOMED]
gcode:
    { action_respond_info("Axes homed: " ~ printer.toolhead.homed_axes)}
    
[gcode_macro SIREN]
gcode:
    M300 S850 P400
    M300 S1020 P300
    M300 S850 P400
    M300 S1020 P300
    M300 S850 P400
    M300 S1020 P300
    M300 S850 P400
    
[gcode_macro FORCEZ]
gcode:
    {% set Z = params.Z|default(10)|int %}
    {% if (Z > 20) %}
        {% set Z = 20 %}
        M118 To high height. Forced to 20mm
    {% endif %}
    {% if ("xyz" not in printer.toolhead.homed_axes) %}
        {% for i in range(1, Z) %}
            FORCE_MOVE STEPPER=stepper_z1 DISTANCE=1 VELOCITY=10
            FORCE_MOVE STEPPER=stepper_z2 DISTANCE=1 VELOCITY=10
        {% endfor %}
    {% else %}
        M118 Already hommed, aborting.
    {% endif %}
    
[gcode_macro FORCEZALL]
gcode:
    {% set Z = params.Z|default(10)|int %}
    {% if (Z > 20) %}
        {% set Z = 20 %}
        M118 To high height. Forced to 20mm
    {% endif %}
    {% if ("xyz" not in printer.toolhead.homed_axes) %}
        {% for i in range(1, Z) %}
            FORCE_MOVE STEPPER=stepper_z1 DISTANCE=1 VELOCITY=10
            FORCE_MOVE STEPPER=stepper_z2 DISTANCE=1 VELOCITY=10
            FORCE_MOVE STEPPER=stepper_z3 DISTANCE=1 VELOCITY=10
            FORCE_MOVE STEPPER=stepper_z DISTANCE=1 VELOCITY=10
        {% endfor %}
    {% else %}
        M118 Already hommed, aborting.
    {% endif %}
    
[gcode_macro PARK]
# Params
## X
## Y
## Z
variable_pos_x: 150
variable_pos_y: 30
variable_pos_z: 50
variable_spd_xy: 6000
variable_spd_z: 1500

gcode:
    SAVE_GCODE_STATE NAME=park
    G90                            ; absolute positioning
    {% set Rz = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set z = printer.gcode_move.gcode_position.z|float %}
    {% if (z + pos_z|float) < printer.configfile.config["stepper_z"]["position_max"]|float %}
       G1 Z{([Rz,z + pos_z|float]|sort)[0]} F{spd_z}
       G1 X{params.X|default(pos_x)|float} Y{params.Y|default(pos_y)|float} F{spd_xy}  
    {% endif %}
    RESTORE_GCODE_STATE NAME=park

[gcode_macro MANUAL_HEAT]
gcode:
    M140 S110
    M104 S150
    SET_FAN_SPEED FAN=chamber_fan SPEED=1
    M106 S255 ;turn on the PCF
    
[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    {% if printer.extruder.temperature < 220 %}
        M109 S225
    {% endif %}
    M83
    G1 E70 F240
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1
    RESTORE_GCODE_STATE NAME=__filament__load

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    {% if printer.extruder.temperature < 220 %}
        M109 S225
    {% endif %}
    M83
    G1 E-70 F960
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1
    RESTORE_GCODE_STATE NAME=__filament__load


#####################################################################
#   Playground
#####################################################################


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.430
#*# pid_ki = 1.099
#*# pid_kd = 104.471
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.534
#*# pid_ki = 1.344
#*# pid_kd = 320.849
#*#
#*# [stepper_z]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.070000, 0.055000, 0.041250, 0.038750, 0.070000
#*# 	  0.028750, 0.018750, 0.005000, 0.010000, 0.047500
#*# 	  0.025000, 0.017500, 0.000000, 0.011250, 0.043750
#*# 	  0.033750, 0.025000, 0.011250, 0.016250, 0.050000
#*# 	  0.088750, 0.071250, 0.058750, 0.060000, 0.083750
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
