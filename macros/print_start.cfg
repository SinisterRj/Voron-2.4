[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    #G32                            ; home all axes
    #G1 Z20 F3000                   ; move nozzle away from bed
    # O do Diem:
    {% set speed_min = params.CORNER_VELOCITY|default(4)|float %}
    {% set speed_max = params.MAX_VELOCITY|default(440)|float %}
    {% set speed_accel = params.ACCEL|default(500)|int %}
    {% set speed_deaccel = params.DEACCEL|default(500)|int %}
    {% set force_home_xy = params.FORCE_HOME_XY|default(1)|int %}
    {% set force_qgl = params.FORCE_QGL|default(0)|int %}
    {% set force_calibrate_z = params.FORCE_CALIBRATE_Z|default(0)|int %}
    {% set force_bedmesh = params.FORCE_BEDMESH|default(0)|int %}
    
    {% set PA = params.PA|default(0.05)|float %}

    {% set bkp_speed_accel = printer.toolhead.max_accel|int %}
    {% set bkp_speed_deaccel = printer.toolhead.max_accel_to_decel|int %}
    {% set bkp_speed_min = printer.toolhead.square_corner_velocity|float %}
    {% set bkp_speed_max = printer.toolhead.max_velocity|float %}

    {% if (force_qgl == 1 or force_home_xy == 1) %}{% set force_calibrate_z = 1 %}{% endif %}
    
    M117 Print_Start MACRO
    RESPOND TYPE=echo MSG="Starting to print..."
    SET_VELOCITY_LIMIT VELOCITY={speed_max} ACCEL={speed_accel} ACCEL_TO_DECEL={speed_deaccel} SQUARE_CORNER_VELOCITY={speed_min}
    CLEAR_PAUSE    ; Limpa o estado de pause caso a ultima impressao tenha sido finalizada depois de um pause e antes de um resume.

    {% if ("xyz" not in printer.toolhead.homed_axes) or (force_home_xy == 1) %}
      SET_LED LED=case RED=1 GREEN=1 BLUE=0 WHITE=0
      M117 Homming XYZ
      RESPOND TYPE=echo MSG="Not hommed. Homming XYZ axes."
      G28
      G90
      G0 Y250 Z5 F5000 ; Avoid  klicky
    {% endif %}
    
	{% if printer["gcode_macro _Probe_Variables"].probe_lock or printer["gcode_macro _Probe_Variables"].probe_attached %} ; doca o klicky caso o probe esteja ainda no hotend
	  RESPOND TYPE=echo MSG="Docking probe."
	  DOCK_PROBE_UNLOCK
	{% endif %}
	
    G90
    M117 NOZZLE_WIPE
    RESPOND TYPE=echo MSG="STEP 1: Nozzle wipe."
    NOZZLE_WIPE
    G0 Y250 F5000	; Avoid  klicky
    ATTACH_PROBE_LOCK
    M106 S255  		; Start fan
    {% if (not printer.quad_gantry_level.applied) or force_qgl == 1 %}
      M117 QUAD_GANTRY_LEVEL
      RESPOND TYPE=echo MSG="STEP 2: Quad gantry level."
      SET_LED LED=case RED=1 GREEN=0 BLUE=0 WHITE=0
      QUAD_GANTRY_LEVEL
      G28 Z
      G0 Y250 F5000 	; Avoid  klicky
      M117 CALIBRATE_Z
      RESPOND TYPE=echo MSG="STEP 3: Calibrate Z offset."
      ;CLEAN_NOZZLE
      G0 Y250 F5000 	; Avoid  klicky
      M106 S0  		    ; Stop fan
      CALIBRATE_Z
      M106 S255  		; Start fan
    {% endif %}
    LEVEL_BED_ADVANCED MAX_AGE=10 ; probe mesh eventually
    RESPOND TYPE=echo MSG="Docking probe."
    DOCK_PROBE_UNLOCK
    M106 S0  		; Stop fan
    SET_VELOCITY_LIMIT VELOCITY={bkp_speed_max} ACCEL={bkp_speed_accel} ACCEL_TO_DECEL={bkp_speed_deaccel} SQUARE_CORNER_VELOCITY={bkp_speed_min}
    SAVE_GCODE_STATE NAME=printer_init
    
    #G0 X308 Y350 Z30 F3600 ; bucket
    SET_LED LED=case RED=0 GREEN=0 BLUE=0 WHITE=1
    SET_PRESSURE_ADVANCE ADVANCE={PA}
    RESTORE_GCODE_STATE NAME=printer_init